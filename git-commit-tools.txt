commit of Tools: 2014/03/28 - 2014/04/05 [COMMITTED]
----------------------------------------
datamining-functions.r:
- New functions: 
	- ModelFit(), model.fit(): evaluates the fit of a model by each of a set of input variables.
- Updated functions:
	- GroupCategories():
		- it works also for continuous target variable
		- it maps too small categories to the same group "other"
- Bug fixes:
	- GroupCategories()

startup-functions.r:
- New functions:
	- parseVariable(), parse.variable(): parses a variable passed as variable names and/or numeric variables.
		Ex: target="y" or target=tofit$y
- Updated functions:
	- pairs.custom():
		- added a scaling of the points and labels by automatically adjusting the cex and inches parameter received by plot.binned() when this function is called as some of the panel functions. This is to avoid having the points and labels too big w.r.t. the actual plot size in the panel.
		- the target parameter must now be a string referring to a variable name of the data frame used to create the pairs plot.
	- plot.binned():
		- Simplied the specification of the axis formats by removing parameters xlimProperty, ylimProperty, ylim2Property. Now the "new" or "orig" specifications should be directly passed to xlim, ylim, ylim2.
- Bug fixes:
	- Added try-catch statements in the following functions:
		- panel.image() when calling kde2d()
		- plot.binned() when calling lm() and loess() (especially is important for the latter)
		This is to avoid collapse of the pairs.custom() function with its default call or using plot.binned() for the upper.panel function.
	- plot.binned():
		- took care of target variables having NAs (NAs are removed now using complete.cases())
		- fixed error message when target was explicitly passed as target=NULL (changed if (!missing(target)) with if (!is.null(target)))
		- took care of updating the ylim value when a pred variable is passed, so that the pred values fit in the plot.

commit of Tools: 2014/04/05 - 2014/05/05 [COMMITTED]
----------------------------------------
Added git-commit-tools.txt and updated F1 function

datamining-functions.r:
- Updated functions:
	- PrecisionRecall(), F1():
		- new equivalent name for function F1(): PrecisionRecall()
		- extended functionality so that it computes precision and recall for more than one cut-off value
		- generates the plot of Recall vs. Precision

commit of Tools: 2014/04/05 - 2014/05/05 [COMMITTED]
----------------------------------------
New function cumplot() in startup-functions.r

startup-functions.r:
- New functions:
	- cumplot(): Plot of cumulative y vs. cumulative x. Target y can be continuous or binary 0/1.
- Updated functions:
	- In all functions where it was reasonable (basically functions that optionally generate plots), return() statements were replaced with return(invisible()) so that nothing is shown to the user when the return value is not assigned to a variable.

commit of Tools: 2014/05/05 - 2014/05/10 [COMMITTED]
----------------------------------------
Fixed axis issues in pairs.custom() function

startup-function.r:
- Updated functions:
	- pairs.custom():
		- removed parameters addXAxis, addYAxis from the function signature because they are only relevant when one of the panel functions is plot.binned(). These parameters are still set (to FALSE) when plot.binned() is called as one of the panel functions.
		- fixed the problem of asking for NEXT PLOT when the last panel of plots has been displayed.
	- plot.binned():
		- fixed the default parameter value of: addXAxis (to FALSE), addYAxis (to ylim or ylimProperty == "new"), addY2Axis (ditto), so that now, in a pairs plot, y vertical axes are not shown by default unless their axis limits are set to be the "new" ones (after grouping of the x variable). Recall that these parameters only take effect when the plot.binned() function is called from within a pairs plot. Even though I have set these parameters to FALSE within the pairs.custom() function (when the plot.binned() function has been set as a panel function), I still leave this default behaviour in plot.binned() in case I want to change how these parameters are set in pairs.custom() by default in the future.

commit of Tools: 2014/05/10 - 2014/05/11 [COMMITTED]
----------------------------------------
New function plot.outliers2d() and enhanced ModelFit()

startup-function.r:
- New functions:
	- plot.outliers2d(), panel.outliers2d(): plot 2D outliers based on estimated multivariate gaussian density (Ref: Machine Learning course)
- Updated functions:
	- plot.binned():
 		- added logical parameter 'limits' which indicates whether to show the x limits of each bin as vertical gray lines.
		- changed the default value of parameter 'clip' from "figure" to "region" and at the same time I now set par(xpd=TRUE) before showing any text on the graph (such as point labels) so that all text is fully seen.

datamining-function.r:
- Updated functions:
	- ModelFit(), model.fit(): implemented a flexible call to plot.binned() using formals() (to get the parameters present at the signature of the function) and match.call() to get the parameters passed by the user. This is important because I can now use this implementation to better understand the meaning and use of quote() and substitute(). See also the notes in 'R Help.txt' about this matter.


commit of Tools: 2014/05/11 - 2014/05/22 [COMMITTED]
----------------------------------------
Function redistribution, cleaned up documentation

R files: moved function roc.1() from startup-functions.r to datamining-functions.r and renamed it to roc().

startup-function.r:
- Updated functions:
	- plot.dist(): finalized and successfully tested the function, also with a plotting function different from plot() (e.g. plot.binned())
	- pairs.custom(): fixed a bug occurring when target was passed as NULL by replacing 'if (!missing(target))' with 'if (!is.null(target))'.
	
datamining-functions.r:
- Updated functions:
	- GroupCategories(), roc(): replaced paste0() with paste() because paste0() does not exist in version R-2.8.0 used in SPSS.


commit of Tools: 2014/05/22 - 2014/08/10 [COMMITED]
----------------------------------------
Two new R functions. Updates in R & Python.

startup-functions.r:
- New functions:
	- midpoints(): returns the midpoint of intervals generated by the cut() function.
	- panel.image(): created this function with the same functionality as plot.image() but that should be used to add an image to an existing plot.

- Updated functions:
	- plot.image(): changed parameter add=TRUE to add=FALSE due to the existence of the newly created panel.image() which should be used to add an image to an existing plot.
	- pairs.custom(): changed the default lower.panel= option from plot.image to panel.image()
	- plot.cdf(): changed the way input parameters are handled (now using the match.call() function) so that I don't get any more the error that "argument 'xlab' matched by multiple actual arguments". This error came up when handling the input parameters using 'if (!exist(...))'.
	- plot.bar(): added parameter na.rm=FALSE so that NAs in the x and y variables are NOT excluded by default. In this case NA values in the x variable are considered as a separate valid category; NA values in the y variable are ignored anyway. For more info, see help(table), since this function is where the na.rm value takes effect.
	
datamining-functions.r
- Updated functions:
	- AssignCategories(): small change to correctly align the original groups being joined by appropriately adding \t and spaces in the cat() call at the end.
	- GroupCategories(): added parameter na.rm=FALSE so that NAs in the x variable is considered as a separate valid category. Note that NA values in the y variable are always ignored anyway. For more info, see help(table), since this function is where the na.rm value takes effect.
	
spssmacros.py:
- Updated functions:
	- RemoveNamesFromList(): Replaced the call to spssaux._buildvarlist() with the call to my function dmspssaux.BuildVarListAndString().
	This was done in order to avoid having to keep track whether a list of names (given as a string with one name per line) has an empty string at the beginning and at the end.
	This change implies that every empty line in a list of names (given as a string) are removed after calling RemoveNamesFromList().
	- TransformPercent(): Fixed two errors:
		- when denConditionMiss=None, the expression not(False) appeared in the generated SPSS syntax!
		- when preplace=True and sreplace=False, the suffix was not added to the percent variable name.

spssmacrosR.py:
- Updated functions:
	- RCopyVariables(): Did an easy fix so that also numeric variables can be copied to R. Before this fix, only string variables could be copied because of a limitation that the BuildVarListAndString() function accepts only sequences and STRING variables (due to its call to spssaux._buildvarlist() function which only accepts the aforementioned types of variables).
